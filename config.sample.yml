# Logging parameters.
logging:
  # Options: ALL | TRACE | DEBUG | INFO | WARN | ERROR | FATAL | OFF. Default: INFO.
  level: DEBUG
  # Options: console | file | dailyRotatingFile | sizeRotatingFile. Default: console.
  output: console
  # Configure the log file.
  file:
    # Default: `./logs`
    dir: ./logs
    # Default: `the_log`.
    name: processing
    # File size in MB for `sizeRotatingFile` log type. Default: 20 MB.
    maxSize: 20
    # Number of old files to keep for `sizeRotatingFile` log type. Default: 5.
    oldFiles: 5
    # Boolean. If true, it'll create a separate file for errors. Default: false.
    separateError: true
  # Configure the access log. If its level is inferior than the main level it won't be logged.
  # Documentaiton: https://github.com/nomiddlename/log4js-node/wiki/Connect-Logger
  access:
    # Options: Same as the main level. Default: The one used in the main level.
    level: INFO
    # Optional. For using log4js default format: false.
    format: :remote-addr - ":method :url HTTP/:http-version" :status :res[content-length] :response-time ":user-agent"
    # Optional array: each element it's like a regex. Default: empty.
    nolog:

pgsql:
  host: postgis
  user: urbo_admin
  password: urbo
  database: urbo
  port: 5432

cartodb:
  active: true
  accounts:
    username01:
      apiKey: XXXXXXXXXX
      enterprise: true
    username02:
      apiKey: XXXXXXXXXX
      enterprise: true

redis:
  host: redis
  port: 6379
  db: 0
  password: urbo

maxRuns: 1000

connectorJobs:
  active: true
  psqlConcurrency: 100
  cartoConcurrency: 10

tasksSchedule:  # An example
  - type: a_name
    tableName: where_will_be_saved
    job: the_js_job_file
    category: category_vertical
    magnitudeRange: 1
    unitRange: days
    truncateToUnit: hour
    schedule: '3 11 * * *'
    carto: true
