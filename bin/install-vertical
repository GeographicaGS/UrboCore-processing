#!/usr/bin/env node
/**
 * Copyright 2017 Telefónica Digital España S.L.
 * 
 * This file is part of UrboCore Processing.
 * 
 * UrboCore Processing is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * UrboCore Processing is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with UrboCore Processing. If not, see http://www.gnu.org/licenses/.
 * 
 * For those usages not covered by this license please contact with
 * iot_support at tid dot es
 */ 

'use strict';

const fs = require('fs');
const fsExtra = require('fs-extra');
const appDir = require('app-root-path').path;
const path = require('path');

const VERTICALS_DIR = './jobs/verticals'
const jobsDir =  path.join(appDir, VERTICALS_DIR);


const USAGE = 'USAGE: npm run-script install-vertical -- <vertical-source-path> <vertical-name>';

if (process.argv.length < 4) {
  console.error('No arguments were passed');
  console.info(USAGE);
  process.exit();
}

const verticalPath = VERTICALS_DIR;
const srcPath = process.argv[2];
const verticalName = process.argv[3];
const destPath = path.join(verticalPath, verticalName);

try {
  if (fs.lstatSync(destPath).isDirectory()) {
    console.info(`Vertical ${ verticalName } was installed, so let's update it`);
    fsExtra.removeSync(destPath);
  }
} catch (e) {
  console.info(`Fresh install of vertical ${ verticalName }`)
}

try {
  if (!fs.lstatSync(srcPath).isDirectory() || !fs.lstatSync(path.join(srcPath, 'processing')).isDirectory()) {
    throw `${ srcPath } is not a valid vertical`;
  }
} catch (e) {
  console.error('The source path does not exist');
  console.info(USAGE);
  process.exit(1);
}

try {

  const source = path.join(srcPath, 'processing');
  const dest = path.join(destPath, 'processing');

  fs.mkdirSync(destPath);
  fs.mkdirSync(dest);

  fsExtra.copy(source, dest, function (err) {
    if (err) {
      console.error(err);
      process.exit(2);
    }

    console.info(`${ verticalName } installed successfully`);
    process.exit(0);
  });

} catch(e){
  console.error(e);
  process.exit(2);
}
